---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: build-alpine
  image: nephatrine/nxbuilder:alpine
  commands:
  - sudo apk --update add curl-dev
  - sudo mkdir build-alpine
  - sudo chown -R packager build-alpine
  - cd build-alpine
  - cmake -GNinja -DNXPACKAGE_TRIPLET="x86_64-alpine-linux-musl" -DQ2ADMIN_NAME="game" ..
  - ninja orca
  - ninja
  - tar -czvf q2admin-nxmod_x86_64-alpine-linux-musl.tar.gz game.so
  - cd ../data
  - tar -czvf ../build-alpine/q2admin-nxmod_noarch.tar.gz *.txt *.json
- name: build-ubuntu
  image: nephatrine/nxbuilder:ubuntu
  commands:
  - sudo apt-get update
  - sudo apt-get install -y libcurl4-openssl-dev
  - sudo mkdir build-ubuntu
  - sudo chown -R packager build-ubuntu
  - cd build-ubuntu
  - cmake -GNinja -DNXPACKAGE_TRIPLET="x86_64-ubuntu-linux-gnu" -DQ2ADMIN_NAME="game" ..
  - ninja orca
  - ninja
  - tar -czvf q2admin-nxmod_x86_64-ubuntu-linux-gnu.tar.gz game.so
- name: build-redhat
  image: nephatrine/nxbuilder:almalinux
  commands:
  - sudo dnf -y install libcurl-devel
  - sudo mkdir build-redhat
  - sudo chown -R packager build-redhat
  - cd build-redhat
  - cmake -GNinja -DNXPACKAGE_TRIPLET="x86_64-redhat-linux-gnu" -DQ2ADMIN_NAME="game" ..
  - ninja orca
  - ninja
  - tar -czvf q2admin-nxmod_x86_64-redhat-linux-gnu.tar.gz game.so
- name: publish-web
  image: alpine/curl
  environment:
    WEBDAV_USERNAME:
      from_secret: webdav-user
    WEBDAV_PASSWORD:
      from_secret: webdav-pass
  commands:
  - curl -T 'build-alpine/q2admin-nxmod_{x86_64-alpine-linux-musl,noarch}.tar.gz' --user "$WEBDAV_USERNAME:$WEBDAV_PASSWORD" 'https://files.nephatrine.net/archives/'
  - curl -T 'build-redhat/q2admin-nxmod_x86_64-redhat-linux-gnu.tar.gz' --user "$WEBDAV_USERNAME:$WEBDAV_PASSWORD" 'https://files.nephatrine.net/archives/'
  - curl -T 'build-ubuntu/q2admin-nxmod_x86_64-ubuntu-linux-gnu.tar.gz' --user "$WEBDAV_USERNAME:$WEBDAV_PASSWORD" 'https://files.nephatrine.net/archives/'
  depends_on:
  - build-alpine
  - build-redhat
  - build-ubuntu
  when:
    branch:
    - master
    event:
      exclude:
      - pull_request
- name: publish-gitea
  image: plugins/gitea-release
  settings:
    api_key:
      from_secret: gitea-api
    base_url: https://code.nephatrine.net
    files:
    - build-alpine/q2admin-nxmod_x86_64-alpine-linux-musl.tar.gz
    - build-redhat/q2admin-nxmod_x86_64-redhat-linux-gnu.tar.gz
    - build-ubuntu/q2admin-nxmod_x86_64-ubuntu-linux-gnu.tar.gz
    - build-alpine/q2admin-nxmod_noarch.tar.gz
  depends_on:
  - build-alpine
  - build-redhat
  - build-ubuntu
  when:
    event:
    - tag

---
kind: pipeline
name: notify

steps:
- name: notify-status
  image: appleboy/drone-discord
  failure: ignore
  settings:
    avatar_url: https://nephatrine.net/images/buttons/drone-ci.png
    message: "Build of **[{{repo.name}}:{{commit.branch}}](<https://code.nephatrine.net/nephatrine/{{repo.name}}/src/branch/{{commit.branch}}>)** returned [{{build.status}}](<{{build.link}}>)."
    username: DroneCI
    webhook_id:
      from_secret: wh-quake2-id
    webhook_token:
      from_secret: wh-quake2-tok

depends_on:
- default

trigger:
  status:
  - success
  - failure

---
kind: signature
hmac: 7c1ddf40e6d7e5ee8578c877f1ab78930b4bd4cfdc06f9c67d5ea4faedaeceee

...
